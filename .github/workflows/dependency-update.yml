name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 8 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:

jobs:
  dependabot-auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Enable auto-merge for Dependabot PRs
      run: gh pr merge --auto --merge "$PR_URL"
      env:
        PR_URL: ${{ github.event.pull_request.html_url }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-updates:
    name: Security Updates Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Check for security updates
      run: |
        uv pip install safety pip-audit
        
        echo "## Security Vulnerability Report" >> $GITHUB_STEP_SUMMARY
        echo "### Safety Check Results" >> $GITHUB_STEP_SUMMARY
        
        if uv run safety check --json --output safety-report.json; then
          echo "✅ No known security vulnerabilities found by Safety" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Security vulnerabilities found by Safety - see full report" >> $GITHUB_STEP_SUMMARY
          uv run safety check >> $GITHUB_STEP_SUMMARY || true  
        fi
        
        echo "### Pip-Audit Results" >> $GITHUB_STEP_SUMMARY
        if uv run pip-audit --format=json --output=pip-audit-report.json; then
          echo "✅ No vulnerabilities found by pip-audit" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Vulnerabilities found by pip-audit - see full report" >> $GITHUB_STEP_SUMMARY
          uv run pip-audit >> $GITHUB_STEP_SUMMARY || true
        fi

    - name: Create issue for security vulnerabilities
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = `🚨 Security Vulnerabilities Detected - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## Security Vulnerability Alert
          
          Our automated security scanning has detected vulnerabilities in project dependencies.
          
          **Action Required:**
          1. Review the vulnerability reports in the latest workflow run
          2. Update affected dependencies to secure versions
          3. Test the application thoroughly after updates
          4. Close this issue once all vulnerabilities are resolved
          
          **Workflow Run:** [${context.runNumber}](${context.payload.repository.html_url}/actions/runs/${context.runId})
          
          This issue was automatically created by the dependency security check workflow.
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['security', 'dependencies', 'automated']
          });

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: uv pip install -e ".[dev]"

    - name: Install license checker
      run: uv pip install pip-licenses

    - name: Check licenses
      run: |
        echo "## License Compliance Report" >> $GITHUB_STEP_SUMMARY
        uv run pip-licenses --format=markdown >> $GITHUB_STEP_SUMMARY
        
        # Check for problematic licenses
        if uv run pip-licenses --format=json | jq -r '.[].License' | grep -E "(GPL|AGPL|LGPL)" > problematic_licenses.txt; then
          echo "⚠️ Found potentially problematic licenses:" >> $GITHUB_STEP_SUMMARY
          cat problematic_licenses.txt >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ No problematic licenses detected" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report-${{ github.sha }}
        path: |
          *.txt
        retention-days: 90
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tinel"
version = "0.1.0"
description = "Tool designed to control, optimize, and analyze Linux-based systems using AI"
authors = [
    {name = "tinel Contributors"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.11,<4.0"
keywords = ["ai", "llm", "linux", "hardware", "system", "kernel", "model-context-protocol"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Hardware",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
dependencies = [
    "mcp>=1.0.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "ruff>=0.0.287",
    "mypy>=1.5.1",
    "build>=1.0.0",
    "nox>=2023.4.22",
]

[project.urls]
Homepage = "https://github.com/infenia/tinel"
Repository = "https://github.com/infenia/tinel"
Documentation = "https://github.com/infenia/tinel#readme"

[project.scripts]
tinel = "tinel.server:main"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "I", "N", "W", "B", "C4", "SIM", "ERA", "PL"]
ignore = []
fixable = ["ALL"]
unfixable = []
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "dist",
    "build",
]

[tool.ruff.isort]
known-first-party = ["tinel"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors Python source code files for changes and provides automated code quality analysis including code smells, design patterns, and best practices suggestions",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "infenix/**/*.py",
      "tests/**/*.py",
      "*.py"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified Python code for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for Python best practices including PEP 8 compliance, proper error handling, type hints, docstrings\n4. **Performance**: Identify potential performance bottlenecks and suggest optimizations\n5. **Readability**: Suggest improvements for variable naming, code organization, and clarity\n6. **Maintainability**: Recommend refactoring opportunities to reduce complexity and improve modularity\n\nProvide specific, actionable suggestions while ensuring the existing functionality remains intact. Consider the project's architecture as a Linux system analysis tool with MCP server implementation."
  }
}